---
title: Blue/Green Deployment with HAProxy and Consul
subtitle: Автоматизирано въвеждане в експлоатация на софтуер
author:
 - Владимир Витков
date: хххх.хх.хх / BurgasConf
titlepage-note: |
 В процеса на разработка на софтуер възниква необходимост за бързо и лесно въвеждане в експлоатация на нови версии. Това трябва да се случи плавно, автоматизирано, и да подлежи на лесно връщане на старата версия. Терминът който е най-популярен е Blue/Green Deployment.

 Днес ще ви покажа един от начините по който това може да се случи.
...

## Кой е пред вас
 * Владимир
 * Системен Администратор
 * Привърженик на FOSS но не и зеалот
 * Експериментатор
 * Относително приятен човек за разговор\*
\note{}

# Agile and DevOps
\note{}

## Какво е Agile
 * Идеология за разработка на софтуер
 * Това което се ползва
 * Нещо прекрасно
 * ... но но съвсем
 * Периоди на разработка с функционалност
 * Много караници
\note{
	Agile е методология за разработка на софтуер. Целият процес на разработване на софтуер е разделен на малки периоди в които трябва да се разработи и представи нова функционалност. Тази функционалност може да е малка или не но трябва да бъде завършена в този малък цикъл (което често не се получава). Това е като цяло процес който се ползва все повече, и често в резултат се появяват не особенно завършни приложения и/или функционалности.
	Доста хора твърдят че е нещо прекрасно (най-вероятно по -добро дори от нарязания хляб, но това не е точно така. Налага се често преоценяване на целите за спринта, недовършена функционалност и не малко караници кое къде трябва да се случи.
}

## Какво е DevOps
 * Смесица между администратор и разработчик
 * Много автоматизация
 * Управлени на инфраструктура
 * ... като разработчик
 * Отново много караници
\note{
	DevOps е термин който малко или много описва текущата насока в развитието на системната администрация. Терминът не трябва да се възприема като длъжност, или обучение, или дори начин на работа, а като начин на мислене. Насоката в мисленето е да се автоматизира възможно най-голяма част от задачите възникващи в процеса на работа.
	Често това включва автоматизирано управление на инфраструктурата, Управление на работещите приложения. Много сериозен мониторинг за проблеми (и често автоматизирана реакция при проблеми).
	Голяма част от мисленето скрито зад този термин е да смятате инфраструктурата за променлива и динамична. Като нещо за което не трябва да мислите много а да управлявате и програмирате.
	Не си мислете че това е лесно. Включва доста работа, доста караници със разработчици, откриване на проблеми на най-неочакваните места, но и голямо удоволствие.
}

## Защо Agile и DevOps
 * Agile - много версии (и често)
 * DevOps - мутираща инфраструктура
 * Сборът? - голямо натоварване ако няма синхрон
 * Бързо развитие на софтуера
\note{
	Защо споменавам това? Просто. Светът в който живеем е динамичен (и софтуерът е динамичен). Agile предоставя множество нови функционалности, които трябва да бъдат изпробвани. DevOps предоставя възможност да мутира инфраструктурата за да се реализират възможностите. Ако не са в синхрон (като възможности) някой ще бъде много натоварен (най-често DevOps хората).
}

# The Problem
\note{
	Проблемът който имаме е как да имаме две (или повече) едновеременно вървящи версии с възможности за тестване. Допълнителен проблем е как да осигурим лесни възможности за тестване, смяна на версиите без период на недостъпност и лесна смяна на версиите. Имайки предвид възможността трябва да имаме и лесен вариант за връщане на стара версия.
}

## Приложението
![the-application](images/bgd-the-application.png "Приложението")
\note{

	Просто приложение което да демонстрира идеята. Забелязвате ли проблем?
}

## Архитектура
![app-architecture](images/bgd-architecture.png "Архитектура")
\note{
	Решението е базирано на haproxy което излага на външният свят няколко порта (по един за всяка група, един за текущо активната версия и един за управление). Имаме key-value сървър в който registrator приложението описва промените в сървърите ни. haproxy контейнера автоматично регенерира собствената си конфигурация в зависимост от вървящите контейнери. И може ръчно да сменим текущо активната група контейнери.
}

# The Solution
\note{}

# The Demo
\note{}

# Q/A
\note{}

## Контакти
 * Владимир Витков
 * vvitkov@linux-bg.org
 * https://www.getoto.net/zeridon
 * https://github.com/zeridon
